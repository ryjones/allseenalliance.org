<!DOCTYPE html>
<!--[if IEMobile 7]><html class="iem7" lang="en" dir="ltr"><![endif]-->
<!--[if lte IE 6]><html class="lt-ie9 lt-ie8 lt-ie7" lang="en" dir="ltr"><![endif]-->
<!--[if (IE 7)&(!IEMobile)]><html class="lt-ie9 lt-ie8" lang="en" dir="ltr"><![endif]-->
<!--[if IE 8]><html class="lt-ie9" lang="en" dir="ltr"><![endif]-->
<!--[if (gte IE 9)|(gt IEMobile 7)]><!--><html lang="en" dir="ltr"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/terms/"
  xmlns:foaf="http://xmlns.com/foaf/0.1/"
  xmlns:og="http://ogp.me/ns#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:sioc="http://rdfs.org/sioc/ns#"
  xmlns:sioct="http://rdfs.org/sioc/types#"
  xmlns:skos="http://www.w3.org/2004/02/skos/core#"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema#"><!--<![endif]-->
<head>
<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible" />
<meta charset="utf-8" />
<link rel="shortlink" href="/node/4470" />
<link rel="shortcut icon" href="https://identity.allseenalliance.org/sites/all/themes/at_alljoyn/favicon.ico" type="image/vnd.microsoft.icon" />
<meta name="Generator" content="Drupal 7 (http://drupal.org)" />
<link rel="canonical" href="/developers/develop/api-guide/config/cpp" />
<meta name="viewport" content="width=device-width" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta property="og:image" content="https://identity.allseenalliance.org/sites/all/themes/at_alljoyn/images/allseen-logo.png"/>
<meta name="google-translate-customization" content="48b015afeed82101-ecae534af0f48252-ga0b6470a6208b2f5-f"></meta>
<meta name="MobileOptimized" content="width">
<meta name="HandheldFriendly" content="true">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Configuration API Guide - C++ - AllSeen Alliance</title>
<link type="text/css" rel="stylesheet" href="https://identity.allseenalliance.org/sites/default/files/css/css_xE-rWrJf-fncB6ztZfd2huxqgxu4WO-qwma6Xer30m4.css" media="all" />
<link type="text/css" rel="stylesheet" href="https://identity.allseenalliance.org/sites/default/files/css/css_7Vcu6qIuRTO46aDOBZp7_mtksGdhCHSe0pjTO2YbGng.css" media="all" />
<link type="text/css" rel="stylesheet" href="https://identity.allseenalliance.org/sites/default/files/css/css_J2n1xiaSuececTK0yC3DT_Msm4PrkPwHizxr0oXGGoo.css" media="all" />
<link type="text/css" rel="stylesheet" href="https://identity.allseenalliance.org/sites/default/files/css/css_oxEtvjMfj8c8EEJJ-1WXLGGntCnC0UvrbYsq0Gw4m4Q.css" media="screen" />
<link type="text/css" rel="stylesheet" href="https://identity.allseenalliance.org/sites/default/files/css/css_9EusV9fcbkpqBeTGdJPl7ru65jm-3ngbTi_D6YRR_5A.css" media="only screen" />
<script src="https://identity.allseenalliance.org/sites/default/files/js/js_UWQINlriydSoeSiGQxToOUdv493zEa7dpsXC1OtYlZU.js"></script>
<script src="https://identity.allseenalliance.org/sites/default/files/js/js_COMsmDyrY9mzVU28X2uGvF4Ba3vd5eTo5xEO7dvCUZM.js"></script>
<script src="https://identity.allseenalliance.org/sites/default/files/js/js_i8oyg1R4On_HyzPiZ5zC3V-DxehjGAcpKwNao5s0s5I.js"></script>
<script>hljs.configure({languages:[]}); hljs.initHighlightingOnLoad();</script>
<script src="https://identity.allseenalliance.org/sites/default/files/js/js_aG0kZAhSHT6G3QC-d9Wwx9gQp5d0em8X6FmMYZ1e5h4.js"></script>
<script>var _gaq = _gaq || [];_gaq.push(["_setAccount", "UA-"]);_gaq.push(["_trackPageview"]);(function() {var ga = document.createElement("script");ga.type = "text/javascript";ga.async = true;ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";var s = document.getElementsByTagName("script")[0];s.parentNode.insertBefore(ga, s);})();</script>
<script src="https://identity.allseenalliance.org/sites/default/files/js/js_R35PAK16384fXh7f2OqvXVkbbrwr8ABLrDpR1zTluo0.js"></script>
<script src="https://identity.allseenalliance.org/sites/default/files/js/js_DKtRHJS-jz_cHgf23K7wnIWphCanZ_Rz74Aw-DKQyFs.js"></script>
<script>jQuery.extend(Drupal.settings, {"basePath":"\/","pathPrefix":"","ajaxPageState":{"theme":"at_alljoyn","theme_token":"i81ezUxYRTUBQXXGL50l70JGi-F0uzPZ8NwdZQUtE_Y","js":{"misc\/jquery.js":1,"misc\/jquery.once.js":1,"misc\/drupal.js":1,"sites\/all\/modules\/contrib\/comment_notify\/comment_notify.js":1,"sites\/all\/modules\/alljoyn\/custom_modules\/allseen_docs\/allseen_docs_highlight\/highlightjs\/highlight.min.js":1,"0":1,"sites\/all\/libraries\/colorbox\/jquery.colorbox-min.js":1,"sites\/all\/modules\/contrib\/colorbox\/js\/colorbox.js":1,"sites\/all\/modules\/contrib\/colorbox\/styles\/default\/colorbox_style.js":1,"sites\/all\/modules\/contrib\/colorbox\/js\/colorbox_load.js":1,"sites\/all\/modules\/contrib\/colorbox\/js\/colorbox_inline.js":1,"sites\/all\/modules\/contrib\/panels\/js\/panels.js":1,"sites\/all\/modules\/contrib\/quote\/quote.js":1,"sites\/all\/modules\/contrib\/views_slideshow\/js\/views_slideshow.js":1,"sites\/all\/modules\/contrib\/google_analytics\/googleanalytics.js":1,"1":1,"sites\/all\/modules\/alljoyn\/custom_modules\/allseen_docs\/allseen_docs_nav\/allseen-docs-nav.js":1,"sites\/all\/themes\/at_alljoyn\/scripts\/alljoyn.js":1},"css":{"modules\/system\/system.base.css":1,"modules\/system\/system.menus.css":1,"modules\/system\/system.messages.css":1,"modules\/system\/system.theme.css":1,"sites\/all\/modules\/contrib\/comment_notify\/comment_notify.css":1,"sites\/all\/modules\/ldap\/ldap_user\/ldap_user.css":1,"modules\/book\/book.css":1,"modules\/comment\/comment.css":1,"sites\/all\/modules\/contrib\/date\/date_api\/date.css":1,"sites\/all\/modules\/contrib\/date\/date_popup\/themes\/datepicker.1.7.css":1,"modules\/field\/theme\/field.css":1,"sites\/all\/modules\/contrib\/mollom\/mollom.css":1,"modules\/node\/node.css":1,"modules\/user\/user.css":1,"modules\/forum\/forum.css":1,"sites\/all\/modules\/contrib\/views\/css\/views.css":1,"sites\/all\/modules\/alljoyn\/custom_modules\/allseen_docs\/allseen_docs_highlight\/highlightjs\/default.min.css":1,"sites\/all\/modules\/contrib\/colorbox\/styles\/default\/colorbox_style.css":1,"sites\/all\/modules\/contrib\/ctools\/css\/ctools.css":1,"sites\/all\/modules\/ldap\/ldap_servers\/ldap_servers.admin.css":1,"sites\/all\/modules\/contrib\/panels\/css\/panels.css":1,"sites\/all\/modules\/contrib\/quote\/quote.css":1,"sites\/all\/modules\/contrib\/views_slideshow\/views_slideshow.css":1,"sites\/all\/modules\/alljoyn\/custom_modules\/allseen_docs\/allseen_docs_nav\/allseen-docs-nav.css":1,"sites\/all\/modules\/alljoyn\/features\/content_type_developer_document\/content-type-developer-document.css":1,"sites\/all\/themes\/adaptivetheme\/at_core\/css\/at.layout.css":1,"sites\/all\/themes\/at_alljoyn\/css\/fonts.css":1,"sites\/all\/themes\/at_alljoyn\/css\/globals.css":1,"sites\/all\/themes\/at_alljoyn\/css\/jcarousel-alljoyn.css":1,"public:\/\/adaptivetheme\/at_alljoyn_files_7dbe1ef5\/at_alljoyn.responsive.layout.css":1,"public:\/\/adaptivetheme\/at_alljoyn_files_7dbe1ef5\/at_alljoyn.responsive.styles.css":1}},"colorbox":{"opacity":"0.85","current":"{current} of {total}","previous":"\u00ab Prev","next":"Next \u00bb","close":"Close","maxWidth":"98%","maxHeight":"98%","fixed":true,"mobiledetect":true,"mobiledevicewidth":"480px"},"jcarousel":{"ajaxPath":"\/jcarousel\/ajax\/views"},"quote_nest":2,"googleanalytics":{"trackOutbound":1,"trackMailto":1,"trackDownload":1,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls|xml|z|zip"}});</script>
<!--[if lt IE 9]>
<script src="https://identity.allseenalliance.org/sites/all/themes/adaptivetheme/at_core/scripts/respond.js?nwgww1"></script>
<script src="https://identity.allseenalliance.org/sites/all/themes/adaptivetheme/at_core/scripts/html5.js?nwgww1"></script>
<script src="https://identity.allseenalliance.org/sites/all/themes/adaptivetheme/at_core/scripts/PIE.htc?nwgww1"></script>
<script src="https://identity.allseenalliance.org/sites/all/themes/adaptivetheme/at_core/scripts/selectivizr.js?nwgww1"></script>
<![endif]-->
</head>
<body class="html not-front not-logged-in one-sidebar sidebar-first page-node page-node- page-node-4470 node-type-developer-document site-name-hidden with-subnav page-developers-develop-api-guide-config-cpp section-developers">
  <div id="body-top">
      </div>
  <div id="skip-link">
    <a href="#main-content" class="element-invisible element-focusable">Skip to main content</a>
  </div>
  <div class="region region-page-top"><div class="region-inner clearfix"><div id="fb-root"></div><script type="text/javascript">
     window.fbAsyncInit = function() {
       FB.init({
         appId: "492099574180957",
         status: true,
         cookie: true,
         xfbml: true,
         oauth : true,
         channelUrl: "https:\/\/identity.allseenalliance.org\/service_links\/channel"
         });

         FB.Event.subscribe('edge.create', function(href, widget) {
    _gaq.push(['_trackEvent', 'facebook', 'Facebook like', href]);
   });FB.Event.subscribe('edge.remove', function(href, widget) {
    _gaq.push(['_trackEvent', 'facebook', 'Facebook unlike', href]);
   });
       };
       (function(d){
     var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement('script'); js.id = id; js.async = true;
     js.src = '//connect.facebook.net/en_US/all.js';
     ref.parentNode.insertBefore(js, ref);
   }(document));
    </script></div></div>  
<div id="wrap">

  <div id="lfcollabprojects-header">
    <div class="gray-diagonal">
      <div class="header-inner">
        <a id="lfcollabprojects-logo" href="http://collabprojects.linuxfoundation.org">Linux Foundation Collaborative Projects</a>
      </div>
    </div>
  </div>

  <div id="page" class="container page">

    
    <header id="header" class="clearfix" role="banner">

      <div class="region region-header"><div class="region-inner clearfix"><div id="block-block-19" class="block block-block" ><div class="block-inner clearfix">        <div class="block-content content"><br /><br /><br /><br /><br /><br /><br /></div></div></div></div></div>
              <div id="branding" class="branding-elements clearfix">

                      <div id="logo"><a href="/" title="Home page"><img class="site-logo" typeof="foaf:Image" src="https://identity.allseenalliance.org/sites/default/files/logo.png" alt="AllSeen Alliance" /></a></div>
          
                      <hgroup id="name-and-slogan" class="element-invisible">
                              <h1 id="site-name" class="element-invisible"><a href="/" title="Home page">AllSeen Alliance</a></h1>
                                        </hgroup>
          
          <!--main menu-->
          <a id="main-menu-toggle" href="#">Site Sections</a>
  		  		  		
        </div>
      
    </header>


    <div id="columns" class="clearfix">
      <div id="sub-menu-bar">
        <div class="region region-sub-menu-bar"><div class="region-inner clearfix"><div id="block-menu-block-allseen-docs-nav" class="block block-menu-block"  role="navigation"><div class="block-inner clearfix">        <div class="block-content content"><div class="menu-block-wrapper menu-block-allseen-docs-nav menu-name-main-menu parent-mlid-0 menu-level-2">
  <ul class="menu clearfix"><li class="first has-children menu-mlid-2504 menu-item-2504"><a href="/developers/learn">Learn</a></li><li class="has-children menu-mlid-2539 menu-item-2539"><a href="/developers/download">Download</a></li><li class="has-children active-trail menu-mlid-2541 menu-item-2541"><a href="/developers/develop" class="active-trail">Develop</a></li><li class="last has-children menu-mlid-2636 menu-item-2636"><a href="/developers/contribute">Contribute</a></li></ul></div>
</div></div></div><section id="block-menu-block-allseen-docs-responsive-nav" class="block block-menu-block"  role="navigation"><div class="block-inner clearfix">        <div class="block-title-wrapper">
      <h2 class="block-title">Menu</h2>
    </div>
      <div class="block-content content"><div class="menu-block-wrapper menu-block-allseen-docs-responsive-nav menu-name-main-menu parent-mlid-0 menu-level-1">
  <ul class="menu clearfix"><li class="first menu-parent menu-mlid-1994 menu-item-1994"><a href="/about">About</a><ul class="menu clearfix"><li class="first menu-mlid-2486 menu-item-2486"><a href="/about/why-allseen">Why AllSeen</a></li><li class="menu-mlid-2464 menu-item-2464"><a href="/about/get-involved">Get Involved</a></li><li class="collapsed menu-mlid-2446 menu-item-2446"><a href="/about/governance/ip-policy">IP Policy</a></li><li class="menu-mlid-2491 menu-item-2491"><a href="/about/working-groups">Working Groups</a></li><li class="menu-mlid-2286 menu-item-2286"><a href="/about/members">Member Companies</a></li><li class="menu-mlid-2285 menu-item-2285"><a href="/about/join-allseen-alliance">Join The AllSeen Alliance</a></li><li class="collapsed menu-mlid-2447 menu-item-2447"><a href="/about/governance">Governance</a></li><li class="menu-mlid-501 menu-item-501"><a href="/about/faqs">FAQs</a></li><li class="menu-mlid-2322 menu-item-2322"><a href="/about/contact">Contact Us</a></li><li class="menu-mlid-2282 menu-item-2282"><a href="/allseen/what-is-allseen-alliance">What is AllSeen Alliance?</a></li><li class="last menu-mlid-2490 menu-item-2490"><a href="https://wiki.allseenalliance.org/members_private/start?do=login&amp;sectok=34485854163fe6a0be457198139e2c84" title="Members Area" id="members_area" name="Members Area" rel="nofollow" target="_blank">Members Area</a></li></ul></li><li class="menu-parent active-trail menu-mlid-2503 menu-item-2503"><a href="/developers" class="active-trail">Developers</a><ul class="menu clearfix"><li class="first menu-parent has-children menu-mlid-2504 menu-item-2504"><a href="/developers/learn">Learn</a><ul class="menu clearfix"><li class="first menu-mlid-2505 menu-item-2505"><a href="/developers/learn/use-cases">Use Cases</a></li><li class="menu-mlid-2506 menu-item-2506"><a href="/developers/learn/architecture">Architecture</a></li><li class="menu-parent menu-mlid-2507 menu-item-2507"><a href="/developers/learn/core">Core Framework</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2508 menu-item-2508"><a href="/developers/learn/core/about-announcement">About Announcement</a><ul class="menu clearfix"><li class="first menu-mlid-2509 menu-item-2509"><a href="/developers/learn/core/about-announcement/interface">Interface</a></li><li class="last menu-mlid-2510 menu-item-2510"><a href="/developers/learn/core/about-announcement/interface-14-02">Interface 14.02</a></li></ul></li><li class="menu-mlid-2511 menu-item-2511"><a href="/developers/learn/core/events-and-actions">Events and Actions</a></li><li class="menu-mlid-2992 menu-item-2992"><a href="/developers/learn/core/rn_config">Routing Node Configuration</a></li><li class="menu-mlid-2512 menu-item-2512"><a href="/developers/learn/core/standard-core">Standard Core</a></li><li class="menu-mlid-2513 menu-item-2513"><a href="/developers/learn/core/thin-core">Thin Core</a></li><li class="menu-parent menu-mlid-2514 menu-item-2514"><a href="/developers/learn/core/system-description">System Description</a><ul class="menu clearfix"><li class="first menu-mlid-2515 menu-item-2515"><a href="/developers/learn/core/system-description/system-architecture">System Architecture</a></li><li class="menu-mlid-2516 menu-item-2516"><a href="/developers/learn/core/system-description/advertisement-discovery">Advertisement and Discovery</a></li><li class="menu-mlid-2645 menu-item-2645"><a href="/developers/learn/core/system-description/alljoyn-transport">AllJoyn Transport</a></li><li class="menu-mlid-2517 menu-item-2517"><a href="/developers/learn/core/system-description/data-exchange">Data Exchange</a></li><li class="menu-mlid-2518 menu-item-2518"><a href="/developers/learn/core/system-description/alljoyn-session">AllJoyn Session</a></li><li class="menu-mlid-2519 menu-item-2519"><a href="/developers/learn/core/system-description/sessionless-signal">Sessionless Signal</a></li><li class="menu-mlid-2520 menu-item-2520"><a href="/developers/learn/core/system-description/alljoyn-security">AllJoyn Security</a></li><li class="menu-mlid-2521 menu-item-2521"><a href="/developers/learn/core/system-description/thin-apps">Thin Apps</a></li><li class="last menu-mlid-2522 menu-item-2522"><a href="/developers/learn/core/system-description/events-actions">Events and Actions</a></li></ul></li><li class="last menu-parent menu-mlid-2937 menu-item-2937"><a href="/developers/learn/core/security2_0">Security 2.0</a><ul class="menu clearfix"><li class="first last menu-mlid-2938 menu-item-2938"><a href="/developers/learn/core/security2_0/hld">High-Level Design</a></li></ul></li></ul></li><li class="menu-parent menu-mlid-2523 menu-item-2523"><a href="/developers/learn/base-services">Base Services</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2524 menu-item-2524"><a href="/developers/learn/base-services/onboarding">Onboarding</a><ul class="menu clearfix"><li class="first menu-mlid-2525 menu-item-2525"><a href="/developers/learn/base-services/onboarding/interface">Interface</a></li><li class="last menu-mlid-2526 menu-item-2526"><a href="/developers/learn/base-services/onboarding/interface-14-02">Interface 14.02</a></li></ul></li><li class="menu-parent menu-mlid-2527 menu-item-2527"><a href="/developers/learn/base-services/configuration">Configuration</a><ul class="menu clearfix"><li class="first menu-mlid-2528 menu-item-2528"><a href="/developers/learn/base-services/configuration/interface">Interface</a></li><li class="last menu-mlid-2529 menu-item-2529"><a href="/developers/learn/base-services/configuration/interface-14-02">Interface 14.02</a></li></ul></li><li class="menu-parent menu-mlid-2530 menu-item-2530"><a href="/developers/learn/base-services/notification">Notification</a><ul class="menu clearfix"><li class="first menu-mlid-2531 menu-item-2531"><a href="/developers/learn/base-services/notification/interface">Interface</a></li><li class="last menu-mlid-2532 menu-item-2532"><a href="/developers/learn/base-services/notification/interface-14-02">Interface 14.02</a></li></ul></li><li class="menu-parent menu-mlid-2533 menu-item-2533"><a href="/developers/learn/base-services/controlpanel">ControlPanel</a><ul class="menu clearfix"><li class="first menu-mlid-2534 menu-item-2534"><a href="/developers/learn/base-services/controlpanel/interface">Interface</a></li><li class="last menu-mlid-2535 menu-item-2535"><a href="/developers/learn/base-services/controlpanel/interface-14-02">Interface 14.02</a></li></ul></li><li class="last menu-parent menu-mlid-2536 menu-item-2536"><a href="/developers/learn/base-services/audiostreaming">Audio Streaming</a><ul class="menu clearfix"><li class="first last menu-mlid-2537 menu-item-2537"><a href="/developers/learn/base-services/audiostreaming/interface">Interface</a></li></ul></li></ul></li><li class="last menu-mlid-2538 menu-item-2538"><a href="/developers/learn/glossary">Glossary</a></li></ul></li><li class="menu-parent has-children menu-mlid-2539 menu-item-2539"><a href="/developers/download">Download</a><ul class="menu clearfix"><li class="first last menu-mlid-2540 menu-item-2540"><a href="/developers/download/supported-platforms">Supported Platforms</a></li></ul></li><li class="menu-parent has-children active-trail menu-mlid-2541 menu-item-2541"><a href="/developers/develop" class="active-trail active-trail">Develop</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2542 menu-item-2542"><a href="/developers/develop/building">Building</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2543 menu-item-2543"><a href="/developers/develop/building/android">Android</a><ul class="menu clearfix"><li class="first last menu-mlid-2544 menu-item-2544"><a href="/developers/develop/building/android/build-source">Build Source</a></li></ul></li><li class="menu-parent menu-mlid-2545 menu-item-2545"><a href="/developers/develop/building/linux">Linux</a><ul class="menu clearfix"><li class="first menu-mlid-2546 menu-item-2546"><a href="/developers/develop/building/linux/openwrt">OpenWRT</a></li><li class="last menu-mlid-2547 menu-item-2547"><a href="/developers/develop/building/linux/build-source">Build Source</a></li></ul></li><li class="menu-parent menu-mlid-2548 menu-item-2548"><a href="/developers/develop/building/ios-osx">iOS/OS X</a><ul class="menu clearfix"><li class="first last menu-mlid-2549 menu-item-2549"><a href="/developers/develop/building/ios-osx/build-source">Build Source</a></li></ul></li><li class="menu-parent menu-mlid-2550 menu-item-2550"><a href="/developers/develop/building/windows">Windows</a><ul class="menu clearfix"><li class="first last menu-mlid-2551 menu-item-2551"><a href="/developers/develop/building/windows/build-source">Build Source</a></li></ul></li><li class="menu-mlid-2552 menu-item-2552"><a href="/developers/develop/building/thin-linux">Thin - Linux</a></li><li class="menu-mlid-2553 menu-item-2553"><a href="/developers/develop/building/thin-windows">Thin - Windows</a></li><li class="last menu-mlid-2993 menu-item-2993"><a href="/developers/develop/building/alljoyn-js">AllJoyn.js</a></li></ul></li><li class="menu-parent menu-mlid-2554 menu-item-2554"><a href="/developers/develop/run-sample-apps">Running Samples</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2555 menu-item-2555"><a href="/developers/develop/run-sample-apps/basic">Basic</a><ul class="menu clearfix"><li class="first menu-mlid-2556 menu-item-2556"><a href="/developers/develop/run-sample-apps/basic/android">Android</a></li><li class="menu-mlid-2557 menu-item-2557"><a href="/developers/develop/run-sample-apps/basic/linux">Linux</a></li><li class="menu-mlid-2558 menu-item-2558"><a href="/developers/develop/run-sample-apps/basic/ios-osx">iOS/OS X</a></li><li class="menu-mlid-2559 menu-item-2559"><a href="/developers/develop/run-sample-apps/basic/windows">Windows</a></li><li class="menu-mlid-2560 menu-item-2560"><a href="/developers/develop/run-sample-apps/basic/thin-linux">Thin - Linux</a></li><li class="last menu-mlid-2561 menu-item-2561"><a href="/developers/develop/run-sample-apps/basic/thin-windows">Thin - Windows</a></li></ul></li><li class="menu-parent menu-mlid-2562 menu-item-2562"><a href="/developers/develop/run-sample-apps/chat">Chat</a><ul class="menu clearfix"><li class="first menu-mlid-2563 menu-item-2563"><a href="/developers/develop/run-sample-apps/chat/android">Android</a></li><li class="menu-mlid-2564 menu-item-2564"><a href="/developers/develop/run-sample-apps/chat/linux">Linux</a></li><li class="menu-mlid-2565 menu-item-2565"><a href="/developers/develop/run-sample-apps/chat/ios-osx">iOS/OS X</a></li><li class="menu-mlid-2566 menu-item-2566"><a href="/developers/develop/run-sample-apps/chat/windows">Windows</a></li><li class="last menu-mlid-2567 menu-item-2567"><a href="/developers/develop/run-sample-apps/chat/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2568 menu-item-2568"><a href="/developers/develop/run-sample-apps/about">About</a><ul class="menu clearfix"><li class="first menu-mlid-2569 menu-item-2569"><a href="/developers/develop/run-sample-apps/about/linux">Linux</a></li><li class="menu-mlid-2570 menu-item-2570"><a href="/developers/develop/run-sample-apps/about/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2646 menu-item-2646"><a href="/developers/develop/run-sample-apps/about/windows">Windows</a></li></ul></li><li class="menu-mlid-2934 menu-item-2934"><a href="/developers/develop/run-sample-apps/observer">Observer</a></li><li class="menu-parent menu-mlid-2571 menu-item-2571"><a href="/developers/develop/run-sample-apps/config">Config</a><ul class="menu clearfix"><li class="first menu-mlid-2572 menu-item-2572"><a href="/developers/develop/run-sample-apps/config/android">Android</a></li><li class="menu-mlid-2573 menu-item-2573"><a href="/developers/develop/run-sample-apps/config/linux">Linux</a></li><li class="menu-mlid-2574 menu-item-2574"><a href="/developers/develop/run-sample-apps/config/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2575 menu-item-2575"><a href="/developers/develop/run-sample-apps/config/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2576 menu-item-2576"><a href="/developers/develop/run-sample-apps/controlpanel">Control Panel</a><ul class="menu clearfix"><li class="first menu-mlid-2577 menu-item-2577"><a href="/developers/develop/run-sample-apps/controlpanel/android">Android</a></li><li class="menu-mlid-2578 menu-item-2578"><a href="/developers/develop/run-sample-apps/controlpanel/linux">Linux</a></li><li class="menu-mlid-2579 menu-item-2579"><a href="/developers/develop/run-sample-apps/controlpanel/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2580 menu-item-2580"><a href="/developers/develop/run-sample-apps/controlpanel/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2581 menu-item-2581"><a href="/developers/develop/run-sample-apps/notification">Notification</a><ul class="menu clearfix"><li class="first menu-mlid-2582 menu-item-2582"><a href="/developers/develop/run-sample-apps/notification/android">Android</a></li><li class="menu-mlid-2583 menu-item-2583"><a href="/developers/develop/run-sample-apps/notification/linux">Linux</a></li><li class="menu-mlid-2584 menu-item-2584"><a href="/developers/develop/run-sample-apps/notification/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2585 menu-item-2585"><a href="/developers/develop/run-sample-apps/notification/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2586 menu-item-2586"><a href="/developers/develop/run-sample-apps/onboarding">Onboarding</a><ul class="menu clearfix"><li class="first menu-mlid-2587 menu-item-2587"><a href="/developers/develop/run-sample-apps/onboarding/android">Android</a></li><li class="menu-mlid-2588 menu-item-2588"><a href="/developers/develop/run-sample-apps/onboarding/linux">Linux</a></li><li class="last menu-mlid-2589 menu-item-2589"><a href="/developers/develop/run-sample-apps/onboarding/ios-osx">iOS/OS X</a></li></ul></li><li class="menu-parent menu-mlid-2590 menu-item-2590"><a href="/developers/develop/run-sample-apps/acserver">AC Server</a><ul class="menu clearfix"><li class="first menu-mlid-2591 menu-item-2591"><a href="/developers/develop/run-sample-apps/acserver/linux">Linux</a></li><li class="last menu-mlid-2592 menu-item-2592"><a href="/developers/develop/run-sample-apps/acserver/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2593 menu-item-2593"><a href="/developers/develop/run-sample-apps/test">Command Line Apps</a><ul class="menu clearfix"><li class="first last menu-mlid-2594 menu-item-2594"><a href="/developers/develop/run-sample-apps/test/sessions">Sessions</a></li></ul></li><li class="last menu-mlid-2994 menu-item-2994"><a href="/developers/develop/run-sample-apps/alljoyn-js">AllJoyn.js</a></li></ul></li><li class="menu-parent active-trail menu-mlid-2595 menu-item-2595"><a href="/developers/develop/api-guide" class="active-trail">API Guide</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2596 menu-item-2596"><a href="/developers/develop/api-guide/core">Core</a><ul class="menu clearfix"><li class="first menu-mlid-2939 menu-item-2939"><a href="/developers/develop/api-guide/core/java">java</a></li><li class="menu-mlid-2940 menu-item-2940"><a href="/developers/develop/api-guide/core/objc">Objective-C</a></li><li class="menu-mlid-2647 menu-item-2647"><a href="/developers/develop/api-guide/core/alljoyn-transports-best-practices">Alljoyn Transports Best Practices</a></li><li class="menu-mlid-2648 menu-item-2648"><a href="/developers/develop/api-guide/core/auto-ping">AutoPinger</a></li><li class="menu-mlid-2935 menu-item-2935"><a href="/developers/develop/api-guide/core/observer">Observer</a></li><li class="last menu-mlid-2936 menu-item-2936"><a href="/developers/develop/api-guide/core/propcache">Property Cache</a></li></ul></li><li class="menu-parent menu-mlid-2599 menu-item-2599"><a href="/developers/develop/api-guide/about">About</a><ul class="menu clearfix"><li class="first menu-mlid-2941 menu-item-2941"><a href="/developers/develop/api-guide/about/java">java</a></li><li class="menu-mlid-2942 menu-item-2942"><a href="/developers/develop/api-guide/about/cpp">C++</a></li><li class="menu-mlid-2943 menu-item-2943"><a href="/developers/develop/api-guide/about/objc">Objective-C</a></li><li class="menu-mlid-2944 menu-item-2944"><a href="/developers/develop/api-guide/about/c-thin">C (Thin Core)</a></li><li class="menu-mlid-2945 menu-item-2945"><a href="/developers/develop/api-guide/about/java-legacy">java Legacy</a></li><li class="menu-mlid-2946 menu-item-2946"><a href="/developers/develop/api-guide/about/cpp-legacy">C++ Legacy</a></li><li class="last menu-mlid-2947 menu-item-2947"><a href="/developers/develop/api-guide/about/objc-legacy">Objective-C Legacy</a></li></ul></li><li class="menu-parent menu-mlid-2604 menu-item-2604"><a href="/developers/develop/api-guide/onboarding">Onboarding</a><ul class="menu clearfix"><li class="first menu-mlid-2948 menu-item-2948"><a href="/developers/develop/api-guide/onboarding/java">java</a></li><li class="last menu-mlid-2949 menu-item-2949"><a href="/developers/develop/api-guide/onboarding/objc">Objective-C</a></li></ul></li><li class="menu-parent active-trail menu-mlid-2607 menu-item-2607"><a href="/developers/develop/api-guide/config" class="active-trail">Configuration</a><ul class="menu clearfix"><li class="first menu-mlid-2950 menu-item-2950"><a href="/developers/develop/api-guide/config/java">java</a></li><li class="active-trail active menu-mlid-2951 menu-item-2951"><a href="/developers/develop/api-guide/config/cpp" class="active-trail active">C++</a></li><li class="menu-mlid-2952 menu-item-2952"><a href="/developers/develop/api-guide/config/objc">Objective-C</a></li><li class="last menu-mlid-2953 menu-item-2953"><a href="/developers/develop/api-guide/config/c-thin">C (Thin Core)</a></li></ul></li><li class="menu-parent menu-mlid-2612 menu-item-2612"><a href="/developers/develop/api-guide/notification">Notification</a><ul class="menu clearfix"><li class="first menu-mlid-2954 menu-item-2954"><a href="/developers/develop/api-guide/notification/java">java</a></li><li class="menu-mlid-2955 menu-item-2955"><a href="/developers/develop/api-guide/notification/cpp">C++</a></li><li class="menu-mlid-2956 menu-item-2956"><a href="/developers/develop/api-guide/notification/objc">Objective-C</a></li><li class="last menu-mlid-2957 menu-item-2957"><a href="/developers/develop/api-guide/notification/c-thin">C (Thin Core)</a></li></ul></li><li class="menu-parent menu-mlid-2617 menu-item-2617"><a href="/developers/develop/api-guide/controlpanel">Control Panel</a><ul class="menu clearfix"><li class="first menu-mlid-2958 menu-item-2958"><a href="/developers/develop/api-guide/controlpanel/java">java</a></li><li class="menu-mlid-2959 menu-item-2959"><a href="/developers/develop/api-guide/controlpanel/cpp">C++</a></li><li class="menu-mlid-2960 menu-item-2960"><a href="/developers/develop/api-guide/controlpanel/objc">Objective-C</a></li><li class="last menu-mlid-2961 menu-item-2961"><a href="/developers/develop/api-guide/controlpanel/c-thin">C (Thin Core)</a></li></ul></li><li class="menu-parent menu-mlid-2622 menu-item-2622"><a href="/developers/develop/api-guide/audio-streaming">Audio Streaming</a><ul class="menu clearfix"><li class="first last menu-mlid-2962 menu-item-2962"><a href="/developers/develop/api-guide/audio-streaming/cpp">C++</a></li></ul></li><li class="last menu-mlid-2624 menu-item-2624"><a href="/developers/develop/api-guide/events-and-actions">Events and Actions</a></li></ul></li><li class="menu-mlid-2625 menu-item-2625"><a href="/developers/develop/api-reference">API Reference</a></li><li class="menu-parent menu-mlid-2626 menu-item-2626"><a href="/developers/develop/debug">Debug</a><ul class="menu clearfix"><li class="first last menu-mlid-2627 menu-item-2627"><a href="/developers/develop/debug/common-issues">Common Issues</a></li></ul></li><li class="menu-parent menu-mlid-2628 menu-item-2628"><a href="/developers/develop/tutorial">Tutorial</a><ul class="menu clearfix"><li class="first menu-mlid-2629 menu-item-2629"><a href="/developers/develop/tutorial/core">Core</a></li><li class="menu-mlid-2630 menu-item-2630"><a href="/developers/develop/tutorial/ios">iOS</a></li><li class="menu-mlid-2631 menu-item-2631"><a href="/developers/develop/tutorial/thin-app">Thin App</a></li><li class="menu-mlid-2632 menu-item-2632"><a href="/developers/develop/tutorial/arduino-and-gt202">Arduino + GT202</a></li><li class="last menu-mlid-2633 menu-item-2633"><a href="/developers/develop/tutorial/videos">Videos</a></li></ul></li><li class="last menu-mlid-2634 menu-item-2634"><a href="/developers/develop/ask">Ask Forum</a></li></ul></li><li class="last menu-parent has-children menu-mlid-2636 menu-item-2636"><a href="/developers/contribute">Contribute</a><ul class="menu clearfix"><li class="first last menu-mlid-2637 menu-item-2637"><a href="/developers/contribute/project-lifecycle">Project Lifecycle</a></li></ul></li></ul></li><li class="menu-mlid-2466 menu-item-2466"><a href="/showcase-products-using-alljoyn">Showcase</a></li><li class="menu-parent menu-mlid-2487 menu-item-2487"><a href="/allseen-alliance-certification">Certification</a><ul class="menu clearfix"><li class="first menu-mlid-2488 menu-item-2488"><a href="/certification/how-validate-your-designed-allseen-product">How To Validate Your Product</a></li><li class="last menu-mlid-2489 menu-item-2489"><a href="/certification/faq">FAQ</a></li></ul></li><li class="last menu-parent menu-mlid-2421 menu-item-2421"><a href="/news-and-events">News &amp; Events</a><ul class="menu clearfix"><li class="first menu-mlid-2422 menu-item-2422"><a href="/news-and-events/newsroom/announcements">Announcements</a></li><li class="menu-mlid-2449 menu-item-2449"><a href="/news/videos">Videos</a></li><li class="menu-mlid-2423 menu-item-2423"><a href="/news-and-events/newsroom/in-the-news">In The News</a></li><li class="menu-mlid-2424 menu-item-2424"><a href="/news-and-events/events">Events</a></li><li class="menu-mlid-2448 menu-item-2448"><a href="/news-and-events/blogs">Blogs</a></li><li class="menu-mlid-2461 menu-item-2461"><a href="/news-and-events/newsletters">Newsletters</a></li><li class="last menu-mlid-2933 menu-item-2933"><a href="/news-and-events/videos">Videos</a></li></ul></li></ul></div>
</div></div></section></div></div>      </div>
            
      
      <div class="region region-sidebar-first sidebar"><div class="region-inner clearfix"><div id="block-menu-block-1" class="block block-menu-block"  role="navigation"><div class="block-inner clearfix">        <div class="block-content content"><div class="menu-block-wrapper menu-block-1 menu-name-main-menu parent-mlid-0 menu-level-3">
  <ul class="menu clearfix"><li class="first menu-parent menu-mlid-2542 menu-item-2542"><a href="/developers/develop/building">Building</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2543 menu-item-2543"><a href="/developers/develop/building/android">Android</a><ul class="menu clearfix"><li class="first last menu-mlid-2544 menu-item-2544"><a href="/developers/develop/building/android/build-source">Build Source</a></li></ul></li><li class="menu-parent menu-mlid-2545 menu-item-2545"><a href="/developers/develop/building/linux">Linux</a><ul class="menu clearfix"><li class="first menu-mlid-2546 menu-item-2546"><a href="/developers/develop/building/linux/openwrt">OpenWRT</a></li><li class="last menu-mlid-2547 menu-item-2547"><a href="/developers/develop/building/linux/build-source">Build Source</a></li></ul></li><li class="menu-parent menu-mlid-2548 menu-item-2548"><a href="/developers/develop/building/ios-osx">iOS/OS X</a><ul class="menu clearfix"><li class="first last menu-mlid-2549 menu-item-2549"><a href="/developers/develop/building/ios-osx/build-source">Build Source</a></li></ul></li><li class="menu-parent menu-mlid-2550 menu-item-2550"><a href="/developers/develop/building/windows">Windows</a><ul class="menu clearfix"><li class="first last menu-mlid-2551 menu-item-2551"><a href="/developers/develop/building/windows/build-source">Build Source</a></li></ul></li><li class="menu-mlid-2552 menu-item-2552"><a href="/developers/develop/building/thin-linux">Thin - Linux</a></li><li class="menu-mlid-2553 menu-item-2553"><a href="/developers/develop/building/thin-windows">Thin - Windows</a></li><li class="last menu-mlid-2993 menu-item-2993"><a href="/developers/develop/building/alljoyn-js">AllJoyn.js</a></li></ul></li><li class="menu-parent menu-mlid-2554 menu-item-2554"><a href="/developers/develop/run-sample-apps">Running Samples</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2555 menu-item-2555"><a href="/developers/develop/run-sample-apps/basic">Basic</a><ul class="menu clearfix"><li class="first menu-mlid-2556 menu-item-2556"><a href="/developers/develop/run-sample-apps/basic/android">Android</a></li><li class="menu-mlid-2557 menu-item-2557"><a href="/developers/develop/run-sample-apps/basic/linux">Linux</a></li><li class="menu-mlid-2558 menu-item-2558"><a href="/developers/develop/run-sample-apps/basic/ios-osx">iOS/OS X</a></li><li class="menu-mlid-2559 menu-item-2559"><a href="/developers/develop/run-sample-apps/basic/windows">Windows</a></li><li class="menu-mlid-2560 menu-item-2560"><a href="/developers/develop/run-sample-apps/basic/thin-linux">Thin - Linux</a></li><li class="last menu-mlid-2561 menu-item-2561"><a href="/developers/develop/run-sample-apps/basic/thin-windows">Thin - Windows</a></li></ul></li><li class="menu-parent menu-mlid-2562 menu-item-2562"><a href="/developers/develop/run-sample-apps/chat">Chat</a><ul class="menu clearfix"><li class="first menu-mlid-2563 menu-item-2563"><a href="/developers/develop/run-sample-apps/chat/android">Android</a></li><li class="menu-mlid-2564 menu-item-2564"><a href="/developers/develop/run-sample-apps/chat/linux">Linux</a></li><li class="menu-mlid-2565 menu-item-2565"><a href="/developers/develop/run-sample-apps/chat/ios-osx">iOS/OS X</a></li><li class="menu-mlid-2566 menu-item-2566"><a href="/developers/develop/run-sample-apps/chat/windows">Windows</a></li><li class="last menu-mlid-2567 menu-item-2567"><a href="/developers/develop/run-sample-apps/chat/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2568 menu-item-2568"><a href="/developers/develop/run-sample-apps/about">About</a><ul class="menu clearfix"><li class="first menu-mlid-2569 menu-item-2569"><a href="/developers/develop/run-sample-apps/about/linux">Linux</a></li><li class="menu-mlid-2570 menu-item-2570"><a href="/developers/develop/run-sample-apps/about/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2646 menu-item-2646"><a href="/developers/develop/run-sample-apps/about/windows">Windows</a></li></ul></li><li class="menu-mlid-2934 menu-item-2934"><a href="/developers/develop/run-sample-apps/observer">Observer</a></li><li class="menu-parent menu-mlid-2571 menu-item-2571"><a href="/developers/develop/run-sample-apps/config">Config</a><ul class="menu clearfix"><li class="first menu-mlid-2572 menu-item-2572"><a href="/developers/develop/run-sample-apps/config/android">Android</a></li><li class="menu-mlid-2573 menu-item-2573"><a href="/developers/develop/run-sample-apps/config/linux">Linux</a></li><li class="menu-mlid-2574 menu-item-2574"><a href="/developers/develop/run-sample-apps/config/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2575 menu-item-2575"><a href="/developers/develop/run-sample-apps/config/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2576 menu-item-2576"><a href="/developers/develop/run-sample-apps/controlpanel">Control Panel</a><ul class="menu clearfix"><li class="first menu-mlid-2577 menu-item-2577"><a href="/developers/develop/run-sample-apps/controlpanel/android">Android</a></li><li class="menu-mlid-2578 menu-item-2578"><a href="/developers/develop/run-sample-apps/controlpanel/linux">Linux</a></li><li class="menu-mlid-2579 menu-item-2579"><a href="/developers/develop/run-sample-apps/controlpanel/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2580 menu-item-2580"><a href="/developers/develop/run-sample-apps/controlpanel/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2581 menu-item-2581"><a href="/developers/develop/run-sample-apps/notification">Notification</a><ul class="menu clearfix"><li class="first menu-mlid-2582 menu-item-2582"><a href="/developers/develop/run-sample-apps/notification/android">Android</a></li><li class="menu-mlid-2583 menu-item-2583"><a href="/developers/develop/run-sample-apps/notification/linux">Linux</a></li><li class="menu-mlid-2584 menu-item-2584"><a href="/developers/develop/run-sample-apps/notification/ios-osx">iOS/OS X</a></li><li class="last menu-mlid-2585 menu-item-2585"><a href="/developers/develop/run-sample-apps/notification/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2586 menu-item-2586"><a href="/developers/develop/run-sample-apps/onboarding">Onboarding</a><ul class="menu clearfix"><li class="first menu-mlid-2587 menu-item-2587"><a href="/developers/develop/run-sample-apps/onboarding/android">Android</a></li><li class="menu-mlid-2588 menu-item-2588"><a href="/developers/develop/run-sample-apps/onboarding/linux">Linux</a></li><li class="last menu-mlid-2589 menu-item-2589"><a href="/developers/develop/run-sample-apps/onboarding/ios-osx">iOS/OS X</a></li></ul></li><li class="menu-parent menu-mlid-2590 menu-item-2590"><a href="/developers/develop/run-sample-apps/acserver">AC Server</a><ul class="menu clearfix"><li class="first menu-mlid-2591 menu-item-2591"><a href="/developers/develop/run-sample-apps/acserver/linux">Linux</a></li><li class="last menu-mlid-2592 menu-item-2592"><a href="/developers/develop/run-sample-apps/acserver/thin-linux">Thin - Linux</a></li></ul></li><li class="menu-parent menu-mlid-2593 menu-item-2593"><a href="/developers/develop/run-sample-apps/test">Command Line Apps</a><ul class="menu clearfix"><li class="first last menu-mlid-2594 menu-item-2594"><a href="/developers/develop/run-sample-apps/test/sessions">Sessions</a></li></ul></li><li class="last menu-mlid-2994 menu-item-2994"><a href="/developers/develop/run-sample-apps/alljoyn-js">AllJoyn.js</a></li></ul></li><li class="menu-parent active-trail menu-mlid-2595 menu-item-2595"><a href="/developers/develop/api-guide" class="active-trail">API Guide</a><ul class="menu clearfix"><li class="first menu-parent menu-mlid-2596 menu-item-2596"><a href="/developers/develop/api-guide/core">Core</a><ul class="menu clearfix"><li class="first menu-mlid-2939 menu-item-2939"><a href="/developers/develop/api-guide/core/java">java</a></li><li class="menu-mlid-2940 menu-item-2940"><a href="/developers/develop/api-guide/core/objc">Objective-C</a></li><li class="menu-mlid-2647 menu-item-2647"><a href="/developers/develop/api-guide/core/alljoyn-transports-best-practices">Alljoyn Transports Best Practices</a></li><li class="menu-mlid-2648 menu-item-2648"><a href="/developers/develop/api-guide/core/auto-ping">AutoPinger</a></li><li class="menu-mlid-2935 menu-item-2935"><a href="/developers/develop/api-guide/core/observer">Observer</a></li><li class="last menu-mlid-2936 menu-item-2936"><a href="/developers/develop/api-guide/core/propcache">Property Cache</a></li></ul></li><li class="menu-parent menu-mlid-2599 menu-item-2599"><a href="/developers/develop/api-guide/about">About</a><ul class="menu clearfix"><li class="first menu-mlid-2941 menu-item-2941"><a href="/developers/develop/api-guide/about/java">java</a></li><li class="menu-mlid-2942 menu-item-2942"><a href="/developers/develop/api-guide/about/cpp">C++</a></li><li class="menu-mlid-2943 menu-item-2943"><a href="/developers/develop/api-guide/about/objc">Objective-C</a></li><li class="menu-mlid-2944 menu-item-2944"><a href="/developers/develop/api-guide/about/c-thin">C (Thin Core)</a></li><li class="menu-mlid-2945 menu-item-2945"><a href="/developers/develop/api-guide/about/java-legacy">java Legacy</a></li><li class="menu-mlid-2946 menu-item-2946"><a href="/developers/develop/api-guide/about/cpp-legacy">C++ Legacy</a></li><li class="last menu-mlid-2947 menu-item-2947"><a href="/developers/develop/api-guide/about/objc-legacy">Objective-C Legacy</a></li></ul></li><li class="menu-parent menu-mlid-2604 menu-item-2604"><a href="/developers/develop/api-guide/onboarding">Onboarding</a><ul class="menu clearfix"><li class="first menu-mlid-2948 menu-item-2948"><a href="/developers/develop/api-guide/onboarding/java">java</a></li><li class="last menu-mlid-2949 menu-item-2949"><a href="/developers/develop/api-guide/onboarding/objc">Objective-C</a></li></ul></li><li class="menu-parent active-trail menu-mlid-2607 menu-item-2607"><a href="/developers/develop/api-guide/config" class="active-trail">Configuration</a><ul class="menu clearfix"><li class="first menu-mlid-2950 menu-item-2950"><a href="/developers/develop/api-guide/config/java">java</a></li><li class="active-trail active menu-mlid-2951 menu-item-2951"><a href="/developers/develop/api-guide/config/cpp" class="active-trail active">C++</a></li><li class="menu-mlid-2952 menu-item-2952"><a href="/developers/develop/api-guide/config/objc">Objective-C</a></li><li class="last menu-mlid-2953 menu-item-2953"><a href="/developers/develop/api-guide/config/c-thin">C (Thin Core)</a></li></ul></li><li class="menu-parent menu-mlid-2612 menu-item-2612"><a href="/developers/develop/api-guide/notification">Notification</a><ul class="menu clearfix"><li class="first menu-mlid-2954 menu-item-2954"><a href="/developers/develop/api-guide/notification/java">java</a></li><li class="menu-mlid-2955 menu-item-2955"><a href="/developers/develop/api-guide/notification/cpp">C++</a></li><li class="menu-mlid-2956 menu-item-2956"><a href="/developers/develop/api-guide/notification/objc">Objective-C</a></li><li class="last menu-mlid-2957 menu-item-2957"><a href="/developers/develop/api-guide/notification/c-thin">C (Thin Core)</a></li></ul></li><li class="menu-parent menu-mlid-2617 menu-item-2617"><a href="/developers/develop/api-guide/controlpanel">Control Panel</a><ul class="menu clearfix"><li class="first menu-mlid-2958 menu-item-2958"><a href="/developers/develop/api-guide/controlpanel/java">java</a></li><li class="menu-mlid-2959 menu-item-2959"><a href="/developers/develop/api-guide/controlpanel/cpp">C++</a></li><li class="menu-mlid-2960 menu-item-2960"><a href="/developers/develop/api-guide/controlpanel/objc">Objective-C</a></li><li class="last menu-mlid-2961 menu-item-2961"><a href="/developers/develop/api-guide/controlpanel/c-thin">C (Thin Core)</a></li></ul></li><li class="menu-parent menu-mlid-2622 menu-item-2622"><a href="/developers/develop/api-guide/audio-streaming">Audio Streaming</a><ul class="menu clearfix"><li class="first last menu-mlid-2962 menu-item-2962"><a href="/developers/develop/api-guide/audio-streaming/cpp">C++</a></li></ul></li><li class="last menu-mlid-2624 menu-item-2624"><a href="/developers/develop/api-guide/events-and-actions">Events and Actions</a></li></ul></li><li class="menu-mlid-2625 menu-item-2625"><a href="/developers/develop/api-reference">API Reference</a></li><li class="menu-parent menu-mlid-2626 menu-item-2626"><a href="/developers/develop/debug">Debug</a><ul class="menu clearfix"><li class="first last menu-mlid-2627 menu-item-2627"><a href="/developers/develop/debug/common-issues">Common Issues</a></li></ul></li><li class="menu-parent menu-mlid-2628 menu-item-2628"><a href="/developers/develop/tutorial">Tutorial</a><ul class="menu clearfix"><li class="first menu-mlid-2629 menu-item-2629"><a href="/developers/develop/tutorial/core">Core</a></li><li class="menu-mlid-2630 menu-item-2630"><a href="/developers/develop/tutorial/ios">iOS</a></li><li class="menu-mlid-2631 menu-item-2631"><a href="/developers/develop/tutorial/thin-app">Thin App</a></li><li class="menu-mlid-2632 menu-item-2632"><a href="/developers/develop/tutorial/arduino-and-gt202">Arduino + GT202</a></li><li class="last menu-mlid-2633 menu-item-2633"><a href="/developers/develop/tutorial/videos">Videos</a></li></ul></li><li class="last menu-parent menu-mlid-2634 menu-item-2634"><a href="/developers/develop/ask">Ask Forum</a></li></ul></div>
</div></div></div></div></div>            <div id="content-column" role="main">
        <div class="content-inner">

          
          <section id="main-content">

                                      <header id="main-content-header">

                                                  <h1 id="sub-title">
                    Configuration API Guide - C++                  </h1>
                
                
              </header>
                        
                          <div id="content">
                        <article id="node-4470" class="node node-developer-document article clearfix" about="/developers/develop/api-guide/config/cpp" typeof="sioc:Item foaf:Document" role="article">

  
      <span property="dc:title" content="Configuration API Guide - C++" class="rdf-meta element-hidden"></span><span property="sioc:num_replies" content="0" datatype="xsd:integer" class="rdf-meta element-hidden"></span>
  
  <div class="node-content">
  
  <div class="field-body view-mode-full">
    
<h2 id="reference-code">Reference code</h2>
<h3 id="classes-used-to-provide-configdata">Classes used to provide ConfigData</h3>
<table><thead><tr><th>Server class</th>
<th>Description</th>
</tr></thead><tbody><tr><td>ConfigService</td>
<td>Class that implements the interface org.alljoyn.Config as a service framework.</td>
</tr><tr><td>PropertyStore</td>
<td>Interface that supplies the list of properties required for ReadAll() and enables user manipulation of their values via Update(), Delete() and Reset().</td>
</tr></tbody></table><h3 id="classes-used-to-remotely-manipulate-configdata">Classes used to remotely manipulate ConfigData</h3>
<table><thead><tr><th>Client class</th>
<th>Description</th>
</tr></thead><tbody><tr><td>ConfigClient</td>
<td>Class that implements the interface org.alljoyn.Config as a client.</td>
</tr></tbody></table><h2 id="obtain-the-configuration-service-framework">Obtain the Configuration service framework</h2>
<p>See the <a href="/developers/develop/building/linux">Building Linux section</a>
for instructions on compiling the Configuration service framework.</p>
<h2 id="build-an-application-that-uses-configserver">Build an application that uses ConfigServer</h2>
<p>The following steps provide the high-level process to build an
application that will maintain ConfigData.</p>
<ol><li>Create the base for the AllJoyn® application.</li>
<li>Implement the ProperyStore to produce a ConfigStore.</li>
<li>Initialize the AboutService in service mode.</li>
<li>Instantiate a ConfigStore.</li>
<li>Implement the callbacks required by the Config Server.</li>
<li>Initialize the ConfigService in server mode, providing
it with the ConfigStore and callbacks.</li>
</ol><h2 id="setting-up-the-alljoyn-framework-and-about-feature">Setting up the AllJoyn framework and About feature</h2>
<p>The steps required for this service framework are universal
to all applications that use the AllJoyn framework and for
any application using one or more AllJoyn service frameworks.
Prior to use of the Configuration service framework as a Config
Server or Config Client, the About feature must be implemented
and the AllJoyn framework set up.</p>
<p>Complete the procedures in the following documents to guide
you in this process:</p>
<ul><li><a href="/developers/develop/building/linux">Building Linux section</a></li>
<li><a href="/developers/develop/api-guide/about/cpp">About API Guide</a></li>
</ul><h2 id="implementing-an-app-config-server">Implementing an App: Config Server</h2>
<p>Implementing a Config Server requires creating and registering
an instance of the ConfigService class. Any application using
Config Server also requires an About Server to facilitate the
discovery via Announcements.</p>
<p><strong>NOTE:</strong> Verify the BusAttachment has been created, started and
connected before implementing the ConfigService. See the
<a href="/developers/develop/api-guide/about/cpp">About API Guide</a> for the code snippets.
Code in this chapter references a variable <code>mBus</code>
(the BusAttachment variable name).</p>
<h3 id="initialize-the-alljoyn-framework">Initialize the AllJoyn framework</h3>
<p>See the <a href="/developers/develop/building/linux">Building Linux section</a> for instructions
to set up the AllJoyn framework.</p>
<h4 id="create-bus-attachment">Create bus attachment</h4>
<pre><code class="lang-cpp"><code class="cpp">bus-&gt;Start();
bus-&gt;Connect();</code>
</code></pre>
<h3 id="enable-peer-security">Enable peer security</h3>
<p>Config Server uses peer security.</p>
<p>Create a KeyListener class that inherits from ajn::AuthListener.
It needs to implement two functions: RequestCredentials and
AuthenticationComplete.</p>
<pre><code class="lang-cpp"><code class="cpp">class SrpKeyXListener : public ajn::AuthListener {
   public:
      bool RequestCredentials(const char* authMechanism,
         const char* authPeer,
         uint16_t authCount, const char* userId,
         uint16_t credMask, Credentials&amp; creds);
      void AuthenticationComplete(const char* authMechanism, const char* authPeer,

   bool success);
};</code>
</code></pre>
<p><code>RequestCredentials()</code> needs to set the password using Creds
and return true.</p>
<pre><code class="lang-cpp"><code class="cpp">creds.SetPassword(Password);
return true;</code>
</code></pre>
<p>Instantiate the keylistener class and enable peer security.</p>
<pre><code class="lang-cpp"><code class="cpp">SrpKeyXListener* keyListener = new SrpKeyXListener();
bus-&gt;EnablePeerSecurity("ALLJOYN_PIN_KEYX ALLJOYN_SRP_KEYX ALLJOYN_ECDHE_PSK", keyListener);</code>
</code></pre>
<h3 id="implement-propertystore-to-produce-a-configstore">Implement PropertyStore to produce a ConfigStore</h3>
<p>The PropertyStore interface is required by the AboutService
to store the provisioned values for the About interface data
fields. See the <a href="/developers/learn/core/about-announcement/interface">About Interface Definition</a> for more information.</p>
<p>The ProperyStore interface is also required by the ConfigService
to store and facilitate manipulation of some updateable fields
(listed in <a href="#config-interface-data-fields">Config interface data fields</a>).
See the [Configuration Interface Definition] for more information.</p>
<h4 id="config-interface-data-fields">Config interface data fields</h4>
<table><thead><tr><th>Field name</th>
<th>Required</th>
<th>Type</th>
</tr></thead><tbody><tr><td><code>DefaultLanguage</code></td>
<td>yes</td>
<td><code>s</code></td>
</tr><tr><td><code>DeviceName</code></td>
<td>yes</td>
<td><code>s</code></td>
</tr></tbody></table><p>An example PropertyStore implementation (ConfigStore) is
provided below that specifies the following dictionary of
metadata fields:</p>
<ul><li>Keys are the field names.</li>
<li>Values are a Map of String to Object entries where the
String is the language tag associated with the Object value.</li>
</ul><p>This implementation extends the example AboutStore implementation
in the <a href="/developers/develop/api-guide/about/cpp">About API Guide</a> and is
passed to the AboutService instead of AboutStore.</p>
<pre><code class="lang-cpp"><code class="cpp">PropertyStoreImpl::PropertyStoreImpl(const char* factoryConfigFile, const char*
configFile) : m_IsInitialized(false)
{
   m_configFileName.assign(configFile);
   m_factoryConfigFileName.assign(factoryConfigFile);
}

void PropertyStoreImpl::Initialize()
{
   m_IsInitialized = true; m_factoryProperties.clear();
   m_factoryProperties.insert(m_Properties.begin(), m_Properties.end());

   //m_factoryProperties - overwrite the values that are found in
FactoryConfigService file
   UpdateFactorySettings();
}

void PropertyStoreImpl::FactoryReset()
{
   std::ifstream factoryConfigFile(m_factoryConfigFileName.c_str(), std::ios::binary);
   std::ofstream configFile(m_configFileName.c_str(), std::ios::binary);

   if (factoryConfigFile &amp;&amp; configFile) {
      configFile &lt;&lt; factoryConfigFile.rdbuf();

      configFile.close();
      factoryConfigFile.close();
   } else {
      std::cout &lt;&lt; "Factory reset failed" &lt;&lt; std::endl;
   }

   m_Properties.clear();
   m_Properties.insert(m_factoryProperties.begin(), m_factoryProperties.end());
}

const qcc::String&amp; PropertyStoreImpl::GetConfigFileName()
{
   return m_configFileName;
}

PropertyStoreImpl::~PropertyStoreImpl()
{
}

QStatus PropertyStoreImpl::ReadAll(const char* languageTag, Filter filter, ajn::MsgArg&amp; all)
{
   if (!m_IsInitialized) {
      return ER_FAIL;
   }

   if (filter == ANNOUNCE || filter == READ) {
      return AboutPropertyStoreImpl::ReadAll(languageTag, filter, all);
   }

   if (filter != WRITE) {
      return ER_FAIL;
   }

   QStatus status = ER_OK;
   if (languageTag != NULL &amp;&amp; languageTag[0] != 0) { // check that the language is in the supported languages;
      CHECK_RETURN(isLanguageSupported(languageTag))
   } else {
      PropertyMap::iterator it = m_Properties.find(DEFAULT_LANG);
      if (it == m_Properties.end()) {

         return ER_LANGUAGE_NOT_SUPPORTED;
      }
      CHECK_RETURN(it-&gt;second.getPropertyValue().Get("s", &amp;languageTag))
   }

   MsgArg* argsWriteData = new MsgArg[m_Properties.size()];
   uint32_t writeArgCount = 0;
   do {
      for (PropertyMap::const_iterator it = m_Properties.begin(); it !=
m_Properties.end(); ++it) {
         const PropertyStoreProperty&amp; property = it-&gt;second;

         if (!property.getIsWritable()) {
            continue;
         }

         // check that it is from the defaultLanguage or empty. if (!(property.getLanguage().empty() ||
property.getLanguage().compare(languageTag) == 0)) {
            continue;
         }

         CHECK(argsWriteData[writeArgCount].Set("{sv}", property.getPropertyName().c_str(),
                                          new
MsgArg(property.getPropertyValue())))

         argsWriteData[writeArgCount].SetOwnershipFlags(MsgArg::OwnsArgs,true;

         writeArgCount++;
      }
      CHECK(all.Set("a{sv}", writeArgCount, argsWriteData))
      all.SetOwnershipFlags(MsgArg::OwnsArgs, true);
   } while (0);

   if (status != ER_OK) {
      delete[] argsWriteData;
   }

   return status;
}

QStatus PropertyStoreImpl::Update(const char* name, const char* languageTag, const ajn::MsgArg* value)
{
   if (!m_IsInitialized) {
   return ER_FAIL;
}

   PropertyStoreKey propertyKey = getPropertyStoreKeyFromName(name);
   if (propertyKey &gt;= NUMBER_OF_KEYS) {
      return ER_FEATURE_NOT_AVAILABLE;

   }

   // check the languageTag
   // case languageTag == NULL: is not a valid value for the languageTag
   // case languageTag == "": use the default language
   // case languageTag == string: check value, must be one of the supported languages
   QStatus status = ER_OK;
   if (languageTag == NULL) {
      return ER_INVALID_VALUE;
   } else if (languageTag[0] == 0) {
      PropertyMap::iterator it = m_Properties.find(DEFAULT_LANG);
      if (it == m_Properties.end()) {
         return ER_LANGUAGE_NOT_SUPPORTED;
      }
      status = it-&gt;second.getPropertyValue().Get("s", &amp;languageTag);
   } else {
      status = isLanguageSupported(languageTag);
      if (status != ER_OK) {
         return status;
      }
   }

   // Special case DEFAULT_LANG is not associated with a language in the PropertyMap and
   // its only valid languageTag = NULL
   // By setting it here, we to let the user follow the same language rules as any other property
   if (propertyKey == DEFAULT_LANG) {
      languageTag = NULL;
   }

   //validate that the value is acceptable
   qcc::String languageString = languageTag ? languageTag : ""; status = validateValue(propertyKey, *value, languageString); if (status != ER_OK) {
      std::cout &lt;&lt; "New Value failed validation. Will not update" &lt;&lt; std::endl;

      return status;
   }

   PropertyStoreProperty* temp = NULL;
   std::pair&lt;PropertyMap::iterator, PropertyMap::iterator&gt; propertiesIter =
m_Properties.equal_range(propertyKey);

   for (PropertyMap::iterator it = propertiesIter.first; it !=
propertiesIter.second; it++) {
      const PropertyStoreProperty&amp; property = it-&gt;second;
      if (property.getIsWritable()) {
         if ((languageTag == NULL &amp;&amp; property.getLanguage().empty()) || (languageTag != NULL &amp;&amp; property.getLanguage().compare(languageTag)

== 0)) {

            temp = new PropertyStoreProperty(property.getPropertyName(),

*value, property.getIsPublic(),

               property.getIsAnnouncable());
            if (languageTag) {

            property.getIsWritable(),

               temp-&gt;setLanguage(languageTag);
         }
         m_Properties.erase(it);
         break;
      }
   }
}

if (temp == NULL) {
   return ER_INVALID_VALUE;
}

m_Properties.insert(PropertyPair(propertyKey, *temp));

if (persistUpdate(temp-&gt;getPropertyName().c_str(), value-&gt;v_string.str, languageTag)) {
   AboutService* aboutService = AboutServiceApi::getInstance();
   if (aboutService) {
      aboutService-&gt;Announce();
   std::cout &lt;&lt; "Calling Announce after UpdateConfiguration" &lt;&lt; std::endl;

   }
   delete temp;
   return ER_OK;
} else {
   delete temp;
   return ER_INVALID_VALUE;
   }
}

QStatus PropertyStoreImpl::Delete(const char* name, const char* languageTag)
{
   if (!m_IsInitialized) {
      return ER_FAIL;
   }

   PropertyStoreKey propertyKey = getPropertyStoreKeyFromName(name);
   if (propertyKey &gt;= NUMBER_OF_KEYS) {
      return ER_FEATURE_NOT_AVAILABLE;
   }

   QStatus status = ER_OK;
   if (languageTag == NULL) {
      return ER_INVALID_VALUE;
   } else if (languageTag[0] == 0) {


      PropertyMap::iterator it = m_Properties.find(DEFAULT_LANG);
      if (it == m_Properties.end()) {
         return ER_LANGUAGE_NOT_SUPPORTED;
      }
      status = it-&gt;second.getPropertyValue().Get("s", &amp;languageTag);
      } else {
         status = isLanguageSupported(languageTag);
         if (status != ER_OK) {
            return status;
         }
      }

      if (propertyKey == DEFAULT_LANG) {
         languageTag = NULL;
      }

      bool deleted = false;
      std::pair&lt;PropertyMap::iterator, PropertyMap::iterator&gt; propertiesIter =
   m_Properties.equal_range(propertyKey);

      for (PropertyMap::iterator it = propertiesIter.first; it !=
   propertiesIter.second; it++) {
         const PropertyStoreProperty&amp; property = it-&gt;second;
         if (property.getIsWritable()) {
            if ((languageTag == NULL &amp;&amp; property.getLanguage().empty()) || (languageTag != NULL &amp;&amp; property.getLanguage().compare(languageTag)

   == 0)) {

               m_Properties.erase(it);
               // insert from backup. deleted = true;
               break;
            }
         }
      }

      if (!deleted) {
         if (languageTag != NULL) {
            return ER_LANGUAGE_NOT_SUPPORTED;
         } else {
            return ER_INVALID_VALUE;
         }
      }

      propertiesIter = m_factoryProperties.equal_range(propertyKey);

      for (PropertyMap::iterator it = propertiesIter.first; it !=
   propertiesIter.second; it++) {
         const PropertyStoreProperty&amp; property = it-&gt;second;
         if (property.getIsWritable()) {
            if ((languageTag == NULL &amp;&amp; property.getLanguage().empty()) || (languageTag != NULL &amp;&amp; property.getLanguage().compare(languageTag)

   == 0)) {

               m_Properties.insert(PropertyPair(it-&gt;first, it-&gt;second));
               char* value;
               it-&gt;second.getPropertyValue().Get("s", &amp;value);
               if (persistUpdate(it-&gt;second.getPropertyName().c_str(), value,

   languageTag)) {

                  AboutService* aboutService = AboutServiceApi::getInstance();
                  if (aboutService) {
                     aboutService-&gt;Announce();
                     std::cout &lt;&lt; "Calling Announce after ResetConfiguration"

   &lt;&lt; std::endl;

                 }
                 return ER_OK;
              }
           }
        }
      }
      return ER_INVALID_VALUE;
   }

   bool PropertyStoreImpl::persistUpdate(const char* key, const char* value, const char* languageTag)
   {
      std::map&lt;std::string, std::string&gt; data;
      std::string skey(key);
      if (languageTag &amp;&amp; languageTag[0]) { skey.append("."); skey.append(languageTag);
      }

   data[skey] = value;
   return IniParser::UpdateFile(m_configFileName.c_str(), data);
}

PropertyStoreKey PropertyStoreImpl::getPropertyStoreKeyFromName(qcc::String const&amp;
   propertyStoreName)
   {
      for (int indx = 0; indx &lt; NUMBER_OF_KEYS; indx++) {
         if (PropertyStoreName[indx].compare(propertyStoreName) == 0) {
            return (PropertyStoreKey)indx;
         }
      }
      return NUMBER_OF_KEYS;
   }

   bool PropertyStoreImpl::FillDeviceNames()
   {
      std::map&lt;std::string, std::string&gt; data;

      if (!IniParser::ParseFile(m_factoryConfigFileName.c_str(), data)) {

      std::cerr &lt;&lt; "Could not parse configFile" &lt;&lt; std::endl;
      return false;
   }

   typedef std::map&lt;std::string, std::string&gt;::iterator it_data;
   for (it_data iterator = data.begin(); iterator != data.end(); iterator++) {

      if
(iterator-&gt;first.find(AboutPropertyStoreImpl::getPropertyStoreName(DEVICE_NAME).c_str())
== 0) {
         size_t lastDotLocation = iterator-&gt;first.find(".");
         if ((lastDotLocation ==    std::string::npos) || (lastDotLocation + 1
&gt;= iterator-&gt;first.length())) {
            continue;
         }
         std::string language = iterator-&gt;first.substr(lastDotLocation + 1);
         std::string value = iterator-&gt;second;

         UpdateFactoryProperty(DEVICE_NAME, language.c_str(), MsgArg("s", value.c_str()));
      }
   }

   return true;
}

bool PropertyStoreImpl::UpdateFactorySettings()
{
   std::map&lt;std::string, std::string&gt; data;
   if (!IniParser::ParseFile(m_factoryConfigFileName.c_str(), data)) {
      std::cerr &lt;&lt; "Could not parse configFile" &lt;&lt; std::endl;
      return false;
   }

   std::map&lt;std::string, std::string&gt;::iterator iter;

   iter =
data.find(AboutPropertyStoreImpl::getPropertyStoreName(DEVICE_ID).c_str());
   if (iter != data.end()) {
      qcc::String deviceId = iter-&gt;second.c_str(); UpdateFactoryProperty(DEVICE_ID, NULL, MsgArg("s", deviceId.c_str()));
   }

   if (!FillDeviceNames()) {
      return false;
   }

   iter = data.find(AboutPropertyStoreImpl::getPropertyStoreName(APP_ID).c_str());

   if (iter != data.end()) {
      qcc::String appGUID = iter-&gt;second.c_str();

      UpdateFactoryProperty(APP_ID, NULL, MsgArg("s", appGUID.c_str()));
   }

   iter =
data.find(AboutPropertyStoreImpl::getPropertyStoreName(APP_NAME).c_str());
   if (iter != data.end()) {
      qcc::String appName = iter-&gt;second.c_str(); UpdateFactoryProperty(APP_NAME, NULL, MsgArg("s", appName.c_str()));
   }

   iter =
data.find(AboutPropertyStoreImpl::getPropertyStoreName(DEFAULT_LANG).c_str());
   if (iter != data.end()) {
      qcc::String defaultLanguage = iter-&gt;second.c_str(); UpdateFactoryProperty(DEFAULT_LANG, NULL, MsgArg("s",
defaultLanguage.c_str()));
   }

   return true;
}


void PropertyStoreImpl::UpdateFactoryProperty(PropertyStoreKey propertyKey, const char* languageTag,
   const ajn::MsgArg&amp; value)
{
   PropertyStoreProperty* temp = NULL;
   std::pair&lt;PropertyMap::iterator, PropertyMap::iterator&gt; propertiesIter =
m_factoryProperties.equal_range(propertyKey);

   for (PropertyMap::iterator it = propertiesIter.first; it !=
propertiesIter.second; it++) {
   const PropertyStoreProperty&amp; property = it-&gt;second;

   if ((languageTag == NULL &amp;&amp; property.getLanguage().empty()) || (languageTag != NULL &amp;&amp; property.getLanguage().compare(languageTag)

== 0)) {


      temp = new PropertyStoreProperty(property.getPropertyName(), value,

property.getIsPublic(),
property.getIsWritable(),
property.getIsAnnouncable());
      if (languageTag) {

         temp-&gt;setLanguage(languageTag);
      }
      m_factoryProperties.erase(it);
      break;
   }
}


   if (temp == NULL) {
      return;
   }

   m_factoryProperties.insert(PropertyPair(propertyKey, *temp));
   delete temp;
}</code>
</code></pre>
<h3 id="instantiate-a-configstore">Instantiate a ConfigStore</h3>
<pre><code class="lang-cpp"><code class="cpp">propertyStore = new PropertyStoreImpl(FACTORYCONFIGFILENAME, CONFIGFILENAME);
propertyStore-&gt;setDeviceName(deviceName);
propertyStore-&gt;setAppId(appIdHex);
propertyStore-&gt;setAppName(appName);
propertyStore-&gt;setDefaultLang(defaultLanguage);

propertyStore-&gt;setModelNumber("Wxfy388i");
propertyStore-&gt;setDateOfManufacture("10/1/2199");
propertyStore-&gt;setSoftwareVersion("12.20.44 build 44454");
propertyStore-&gt;setAjSoftwareVersion(ajn::GetVersion());
propertyStore-&gt;setHardwareVersion("355.499. b");

std::vector&lt;qcc::String&gt; languages(3);
languages.push_back("en");
languages.push_back("sp");
languages.push_back("fr");
propertyStore-&gt;setSupportedLangs(languages);

DeviceNamesType::const_iterator iter = deviceNames.find(languages[0]);
   if (iter != deviceNames.end()) {
      CHECK_RETURN(propertyStore-&gt;setDeviceName(iter-&gt;second.c_str(), languages[0]));
   } else {
      CHECK_RETURN(propertyStore-&gt;setDeviceName("My device name", "en"));
   }

   iter = deviceNames.find(languages[1]);
   if (iter != deviceNames.end()) {
      CHECK_RETURN(propertyStore-&gt;setDeviceName(iter-&gt;second.c_str(), languages[1]));
   } else {
      CHECK_RETURN(propertyStore-&gt;setDeviceName("Mi nombre de dispositivo",
"sp"));
   }

   iter = deviceNames.find(languages[2]);
   if (iter != deviceNames.end()) {
      CHECK_RETURN(propertyStore-&gt;setDeviceName(iter-&gt;second.c_str(), languages[2]));
   } else {

      CHECK_RETURN(propertyStore-&gt;setDeviceName("Mon nom de l'appareil", "fr"));

   }
propertyStore-&gt;setDescription("This is an AllJoyn application", "en");
propertyStore-&gt;setDescription("Esta es una AllJoyn aplicacion", "sp");
propertyStore-&gt;setDescription("C'est une Alljoyn application", "fr");

propertyStore-&gt;setManufacturer("Company", "en");
propertyStore-&gt;setManufacturer("Empresa", "sp");
propertyStore-&gt;setManufacturer("Entreprise", "fr");

propertyStore-&gt;setSupportUrl("http://www.allseenalliance.org");
propertyStore-&gt;Initialize();</code>
</code></pre>
<h3 id="implement-a-buslistener-and-sessionportlistener">Implement a BusListener and SessionPortListener</h3>
<p>In order to bind a SessionPort and accept sessions, a new
class must be created that inherits from the AllJoyn
BusListener and SessionPortListener classes.</p>
<p>The class must contain the following function:</p>
<pre><code class="lang-cpp"><code class="cpp">bool AcceptSessionJoiner(SessionPort sessionPort, const char* joiner, const
SessionOpts&amp; opts)</code>
</code></pre>
<p>The AcceptSessionJoiner function will be called any time a
joinsession request is received; the Listener class needs
to dictate whether the joinsession request should be accepted
or rejected by returning true or false, respectively. These
considerations are application-specific and can include any
of the following:</p>
<ul><li>The SessionPort the request was made on</li>
<li>Specific SessionOpts limitations</li>
<li>The number of sessions already joined</li>
</ul><p>Here is an example of a full class declaration for the listener class.</p>
<pre><code class="lang-cpp"><code class="cpp">class CommonBusListener : public ajn::BusListener, public ajn::SessionPortListener {

public:
   CommonBusListener();
   ~CommonBusListener();
   bool AcceptSessionJoiner(ajn::SessionPort sessionPort,
      const char* joiner, const ajn::SessionOpts&amp; opts);
   void setSessionPort(ajn::SessionPort sessionPort);
      ajn::SessionPort getSessionPort();
   private:
      ajn::SessionPort m_SessionPort;
};</code>
</code></pre>
<h3 id="initialize-the-aboutservice-in-server-mode">Initialize the AboutService in server mode</h3>
<pre><code class="lang-cpp"><code class="cpp">busListener = new CommonBusListener();
AboutServiceApi::Init(*bus, *propertyStore);
AboutServiceApi* aboutService = AboutServiceApi::getInstance();
busListener-&gt;setSessionPort(port);
bus-&gt;RegisterBusListener(*busListener);
TransportMask transportMask = TRANSPORT_ANY;
SessionPort sp = port;
SessionOpts opts(SessionOpts::TRAFFIC_MESSAGES, false,
SessionOpts::PROXIMITY_ANY, transportMask);
bus-&gt;BindSessionPort(sp, opts, *busListener);
aboutService-&gt;Register(port);
bus-&gt;RegisterBusObject(*aboutService);</code>
</code></pre>
<p>For more information about the About feature, see the
<a href="/developers/develop/api-guide/about/cpp">About API Guide</a>.</p>
<h3 id="implement-the-callbacks-required-by-the-config-server">Implement the callbacks required by the Config Server</h3>
<pre><code class="lang-cpp"><code class="cpp">ConfigServiceListenerImpl::ConfigServiceListenerImpl(PropertyStoreImpl&amp; store, BusAttachment&amp; bus) :
   ConfigService::Listener(), m_PropertyStore(&amp;store), m_Bus(&amp;bus)
{
}

QStatus ConfigServiceListenerImpl::Restart()
{
   printf("Restart has been called !!!\n");
   return ER_OK;
}

QStatus ConfigServiceListenerImpl::FactoryReset()
{
   QStatus status = ER_OK;
   printf("FactoryReset has been called!!!\n"); m_PropertyStore-&gt;FactoryReset(); printf("Clearing Key Store\n");
   m_Bus-&gt;ClearKeyStore();

   AboutServiceApi* aboutService = AboutServiceApi::getInstance();
   if (aboutService) {
      status = aboutService-&gt;Announce();
      printf("Announce for %s =%d\n", m_Bus-&gt;GetUniqueName().c_str(), status);
   }

   return status;
}

QStatus ConfigServiceListenerImpl::SetPassphrase(const char* daemonRealm, size_t passcodeSize, const char* passcode)
{
   qcc::String passCodeString(passcode, passcodeSize);
   printf("SetPassphrase has been called daemonRealm=%s passcode=%s passcodeLength=%lu\n", daemonRealm,
passCodeString.c_str(), passcodeSize); PersistPassword(daemonRealm, passCodeString.c_str());

   printf("Clearing Key Store\n");
   m_Bus-&gt;ClearKeyStore();

   return ER_OK;
}

ConfigServiceListenerImpl::~ConfigServiceListenerImpl()
{
}

void ConfigServiceListenerImpl::PersistPassword(const char* daemonRealm, const char* passcode)
{
   std::map&lt;std::string, std::string&gt; data;
   data["daemonrealm"] = daemonRealm;
   data["passcode"] = passcode;
   IniParser::UpdateFile(m_PropertyStore-&gt;GetConfigFile().c_str(), data);
}</code>
</code></pre>
<h3 id="initialize-the-configservice-in-server-mode-providing-it-with-the-configstore-and-callbacks">Initialize the ConfigService in server mode, providing it with the ConfigStore and callbacks</h3>
<pre><code class="lang-cpp"><code class="cpp">configServiceListenerImpl = new ConfigServiceListenerImpl(*propertyStoreImpl,
*msgBus);
configService = new ConfigService(*msgBus, *propertyStoreImpl,
*configServiceListenerImpl);

std::vector&lt;qcc::String&gt; interfaces;
interfaces.push_back("org.alljoyn.Config");
aboutService-&gt;AddObjectDescription("/Config", interfaces);

configService-&gt;Register();
msgBus-&gt;RegisterBusObject(*configService);</code>
</code></pre>
<h3 id="advertise-name-and-announce">Advertise name and announce</h3>
<pre><code class="lang-cpp"><code class="cpp">AdvertiseName(SERVICE_TRANSPORT_TYPE);
aboutService-&gt;Announce();</code>
</code></pre>
<h3 id="unregister-and-delete-configservice-and-busattachment">Unregister and delete ConfigService and BusAttachment</h3>
<p>When your process is done with the ConfigService delete variables used:</p>
<pre><code class="lang-cpp"><code class="cpp">if (configService) {
   delete configService;
   configService = NULL;
}

if (configServiceListenerImpl) {
   delete configServiceListenerImpl;
   configServiceListenerImpl = NULL;
}

if (keyListener) {
   delete keyListener;
   keyListener = NULL;
}

if (propertyStoreImpl) {
   delete propertyStoreImpl;
   propertyStoreImpl = NULL;
}

delete msgBus;
msgBus = NULL;</code>
</code></pre>
<h2 id="implementing-an-app-config-client">Implementing an App: Config Client</h2>
<p>To implement an application to receive and modify ConfigData,
use the ConfigClient class. The AboutClient class must be used
so that your application is notified when applications with
About Server and possibly Config Server instances can send announcements.</p>
<p><strong>NOTE:</strong> Verify the BusAttachment has been created, started and
connected before implementing a Config Client. See the <a href="/developers/develop/api-guide/about/cpp">About
API Guide</a> for the code snippets.
Code in this chapter references a variable <code>mBus</code>
(the BusAttachment variable name).</p>
<h3 id="initialize-the-alljoyn-framework">Initialize the AllJoyn framework</h3>
<p>See the <a href="/developers/develop/building/linux">Building Linux section</a> for
instructions to set up the AllJoyn framework.</p>
<h4 id="create-bus-attachment">Create bus attachment</h4>
<pre><code class="lang-cpp"><code class="cpp">busAttachment -&gt;Start();
busAttachment -&gt;Connect();</code>
</code></pre>
<h3 id="enable-peer-security">Enable peer security</h3>
<p>Config Client uses peer security.</p>
<p>Create a KeyListener class that inherits from ajn::AuthListener.
It needs to implement two functions: RequestCredentials and
AuthenticationComplete.</p>
<pre><code class="lang-cpp"><code class="cpp">class SrpKeyXListener : public ajn::AuthListener {
   public:
      bool RequestCredentials(const char* authMechanism, const char* authPeer, uint16_t authCount, const char* userId,
            uint16_t credMask, Credentials&amp; creds);
      void AuthenticationComplete(const char* authMechanism, const char*
authPeer, bool success);
};</code>
</code></pre>
<p>RequestCredentials needs to set the password using Creds and return true.</p>
<pre><code class="lang-cpp"><code class="cpp">creds.SetPassword(Password);
return true;</code>
</code></pre>
<p>Instantiate the keylistener class and enable peer security.</p>
<pre><code class="lang-cpp"><code class="cpp">SrpKeyXListener* keyListener = new SrpKeyXListener();
bus-&gt;EnablePeerSecurity("ALLJOYN_PIN_KEYX ALLJOYN_SRP_KEYX ALLJOYN_ECDHE_PSK", keyListener);</code>
</code></pre>
<h3 id="initialize-the-aboutservice-in-client-mode">Initialize the AboutService in client mode</h3>
<p>Complete the following steps.</p>
<ol><li>Implement the announce handler.</li>
<li>Implement the announce method.</li>
<li>Register the announce handler, if there is a Config interface.</li>
<li>Join a session.</li>
</ol><p>For more information about the About feature, see the <a href="/developers/develop/api-guide/about/cpp">About
API Guide</a>.</p>
<h3 id="create-the-configservice-client-object">Create the ConfigService client object</h3>
<pre><code class="lang-cpp"><code class="cpp">configClient = new ConfigClient(*busAttachment);</code>
</code></pre>
<h4 id="request-the-configdata">Request the ConfigData</h4>
<p>The Configurations data structure is filled by the <code>GetConfigurations()</code>
method call. Configurations can be iterated through to determine
the contents. The content definition is found in the <a href="/developers/learn/base-services/configuration/interface">Configuration
Interface Definition</a>.</p>
<pre><code class="lang-cpp"><code class="cpp">ConfigClient::Configurations configurations;
if ((status = configClient-&gt;GetConfigurations(busname.c_str(),
      "en", configurations, id)) == ER_OK) {
   for (ConfigClient::Configurations::iterator it = configurations.begin();
      it != configurations.end(); ++it) { qcc::String key = it-&gt;first; ajn::MsgArg value = it-&gt;second;
      if (value.typeId == ALLJOYN_STRING) {
         printf("Key name=%s value=%s\n", key.c_str(), value.v_string.str);
         } else if (value.typeId == ALLJOYN_ARRAY &amp;&amp;
value.Signature().compare("as") == 0) {
         printf("Key name=%s values: ", key.c_str());
         const MsgArg*stringArray;
         size_t fieldListNumElements;
         status = value.Get("as", &amp;fieldListNumElements, &amp;stringArray);
         for (unsigned int i = 0; i &lt; fieldListNumElements; i++) {
            char* tempString; stringArray[i].Get("s", &amp;tempString);
            printf("%s ", tempString);
         }
         printf("\n");
      }
   }</code>
</code></pre>
<h4 id="update-the-configdata">Update the ConfigData</h4>
<p>The received data can be updated through the ConfigClient
using the <code>UpdateConfigurations()</code> method call.</p>
<pre><code class="lang-cpp"><code class="cpp">configurations.insert(std::pair&lt;qcc::String, ajn::MsgArg&gt;("DeviceName", MsgArg("s", "New Device Name")));
configClient-&gt;UpdateConfigurations(busname.c_str(), NULL, configurations, id);</code>
</code></pre>
<h4 id="get-the-interface-version">Get the interface version</h4>
<p>The peer device/application configuration can query for the
interface version.</p>
<pre><code class="lang-cpp"><code class="cpp">int version;
configClient-&gt;GetVersion(busname.c_str(), version, id);</code>
</code></pre>
<h4 id="reset-the-configdata">Reset the ConfigData</h4>
<p>The ConfigData can be reset to default through the ConfigClient
using the <code>ResetConfigurations()</code> method call.</p>
<pre><code class="lang-cpp"><code class="cpp">std::vector&lt;qcc::String&gt; configNames;
configNames.push_back("DeviceName");
configClient-&gt;ResetConfigurations(busname.c_str(), "en", configNames, id);</code>
</code></pre>
<h4 id="reset-the-peer-device-application-to-factory-defaults">Reset the peer device application to factory defaults</h4>
<p>The peer device/application configuration can be reset to
factory defaults through the ConfigClient using the
<code>FactoryReset()</code> method call.</p>
<p><strong>NOTE:</strong> This is a no-reply call, so its success cannot be
determined directly.</p>
<pre><code class="lang-cpp"><code class="cpp">configClient-&gt;FactoryReset(busname.c_str(), id);</code>
</code></pre>
<h4 id="restart-the-peer">Restart the peer</h4>
<p>The peer application can be restarted though the ConfigClient
using the Restart() method call.</p>
<p><strong>NOTE:</strong> This is a no-reply call, so its success cannot be
determined directly.</p>
<pre><code class="lang-cpp"><code class="cpp">configClient-&gt;Restart(busname.c_str(), id);</code>
</code></pre>
<h4 id="setting-a-passcode-on-the-peer">Setting a passcode on the peer</h4>
<p>The peer application can be set to have a different passcode
though the ConfigClient using the <code>SetPasscode()</code> method call.
This revokes the current encryption keys and regenerates new
ones based on the new shared secret, namely the passcode.</p>
<p><strong>NOTE:</strong> The realm name is currently ignored.</p>
<pre><code class="lang-cpp"><code class="cpp">configClient-&gt;SetPasscode(busname.c_str(), "MyDeamonRealm", 8, (const uint8_t*) NEW_PASSCODE, id);
   srpKeyXListener-&gt;setPassCode(NEW_PASSCODE);
   qcc::String guid;
   busAttachment-&gt;GetPeerGUID(busname.c_str(), guid);
   busAttachment-&gt;ClearKeys(guid);</code>
</code></pre>
<h3 id="delete-variables-and-unregister-listeners">Delete variables and unregister listeners</h3>
<p>Once you are done using the Config Service, Configuration
service framework, and the AllJoyn framework, free the variables
used in the application.</p>
<pre><code class="lang-cpp"><code class="cpp">if (configClient) {
   delete configClient;
   configClient = NULL;
}
busAttachment-&gt;Stop();
delete busAttachment;</code>
</code></pre>
  </div>
  </div>

  
  
</article>
              </div>
                                   
          </section>

          
        </div>
      </div>


      
    </div>
  </div>
</div>
<div id="sticky-footer">
  
      <footer id="footer" class="clearfix" role="contentinfo">
        <div class="region region-footer"><div class="region-inner clearfix"><nav id="block-system-user-menu" class="block block-system block-menu"  role="navigation"><div class="block-inner clearfix">        <div class="block-content content"><ul class="menu clearfix"><li class="first menu-item-537"><a href="/user/register" title="">Register</a></li><li class="last menu-item-536"><a href="/user/login" title="">Log In</a></li></ul></div></div></nav></div></div>    </footer>
  
  <div id="lfcollabprojects-footer">
    <div class="gray-diagonal">
      <div class="footer-inner">
        <p>&copy; 2017 AllSeen Alliance, Inc. All Rights Reserved.</p>
        <p>The Linux Foundation® is a registered trademark of The Linux Foundation. AllSeen, Designed for AllSeen and AllSeen Alliance are trademarks of the AllSeen Alliance, Inc. AllJoyn® is a registered trademark of AllSeen Alliance, Inc.</p>
        <p>Linux is a registered <a href="http://www.linuxfoundation.org/programs/legal/trademark" title="Linux Mark Institute">trademark</a> of Linus Torvalds.</p>
        <p>Please see our <a href="/brand-guidelines">brand guidelines</a>, <a href="/trademarks">trademark guidelines</a>, <a href="/about/governance/ip-policy">IP policy</a>, <a href="/terms">terms of use</a>, <a href="/license">license</a>, and <a href="/privacy">privacy policy</a>.</p>
      </div>
    </div>
    <div id="body-bottom">
      </div>
</body>
</html>
